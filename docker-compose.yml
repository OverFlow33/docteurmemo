version: '3.8'

services:
  core:
    build: ./docteurmemo
    command: gunicorn docteurmemo.wsgi:application --bind 0.0.0.0:8000
    ports:
      - 8000:8000
    env_file:
      - ./docteurmemo/.env
    depends_on:
      - db
  prediction:
    build: ./docteurmemo_prediction
    command: gunicorn docteurmemo_prediction.wsgi:application --bind 0.0.0.0:8001
    ports:
      - 8001:8001
    env_file:
      - ./docteurmemo_prediction/.env
    depends_on:
      - db
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.db
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
     - 70:3000
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./config:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
  node_exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped
volumes:
  postgres_data:
  grafana-data:
  prometheus-data:
